// <auto-generated />
using System;
using MasterTeme.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MasterTeme.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MasterTeme.Models.KomisijaElement", b =>
                {
                    b.Property<int>("KomisijaElementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MasterTemaId");

                    b.Property<int?>("NastavnikId");

                    b.HasKey("KomisijaElementId");

                    b.HasIndex("MasterTemaId");

                    b.HasIndex("NastavnikId");

                    b.ToTable("KomisijaElement");
                });

            modelBuilder.Entity("MasterTeme.Models.MasterTema", b =>
                {
                    b.Property<int>("MasterTemaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumNNV");

                    b.Property<int?>("MentorNastavnikId");

                    b.Property<string>("Naziv");

                    b.Property<int?>("StudentId");

                    b.HasKey("MasterTemaId");

                    b.HasIndex("MentorNastavnikId");

                    b.HasIndex("StudentId");

                    b.ToTable("MasterTeme");
                });

            modelBuilder.Entity("MasterTeme.Models.Nastavnik", b =>
                {
                    b.Property<int>("NastavnikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime");

                    b.Property<string>("Prezime");

                    b.HasKey("NastavnikId");

                    b.ToTable("Nastavnici");
                });

            modelBuilder.Entity("MasterTeme.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime");

                    b.Property<string>("Indeks");

                    b.Property<string>("Prezime");

                    b.Property<string>("Smer");

                    b.HasKey("StudentId");

                    b.ToTable("Studenti");
                });

            modelBuilder.Entity("MasterTeme.Models.KomisijaElement", b =>
                {
                    b.HasOne("MasterTeme.Models.MasterTema")
                        .WithMany("Komisija")
                        .HasForeignKey("MasterTemaId");

                    b.HasOne("MasterTeme.Models.Nastavnik", "Nastavnik")
                        .WithMany()
                        .HasForeignKey("NastavnikId");
                });

            modelBuilder.Entity("MasterTeme.Models.MasterTema", b =>
                {
                    b.HasOne("MasterTeme.Models.Nastavnik", "Mentor")
                        .WithMany()
                        .HasForeignKey("MentorNastavnikId");

                    b.HasOne("MasterTeme.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });
#pragma warning restore 612, 618
        }
    }
}
